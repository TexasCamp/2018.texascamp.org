{"version":3,"file":"static/webpack/static/development/pages/news.js.3c559b12904472207344.hot-update.js","sources":["webpack:///./pages/news/index.js"],"sourcesContent":["import React from 'react';\nimport compose from 'recompose/compose';\nimport { withApollo, initOnContext } from '../../shared/lib/withApollo';\nimport HeadTitle from '../../components/HeadTitle';\nimport Header from '../../components/Header';\nimport Menu from '../../components/Menu';\nimport Footer from '../../components/Footer';\nimport NewsTeaser from '../../components/NewsTeaser';\nimport withNews, { NEWS_QUERY, newsListMapper } from '../../shared/query/withNews';\nimport styles from './styles.css';\nimport moment from 'moment';\n\n// const NewsOverviewOld = ({\n//   loading,\n//   newsList,\n// }) =>\n//   (!loading &&\n//     <div>\n//       <Menu />\n//       <HeadTitle title=\"News\" />\n//       <div className={styles.contentWrapper}>\n//         <Header />\n//         <div className={styles.content}>\n//           <h1 className={styles.title}>News</h1>\n//           <div className={styles.detail}>\n//             <ul>\n//               {newsList\n//                 .sort(\n//                   (a, b) => b.publishedDate - a.publishedDate\n//                 )\n//                 .map(newsTeaser =>\n//                   <NewsTeaser key={newsTeaser.id} newsTeaser={newsTeaser} />,\n//                 )}\n//             </ul>\n//           </div>\n//           <Footer />\n//         </div>\n//       </div>\n//     </div>) ||\n//   <div>loading</div>;\n\nconst NewsOverview = () => {\n  return (<div>\n      \n      <div className={styles.contentWrapper}>\n        \n        <div className={styles.content}>\n          <h1 className={styles.title}>News</h1>\n          <div className={styles.detail}>\n          {newsList\n            .sort(\n              (a, b) => b.publishedDate - a.publishedDate\n            )\n            .map(newsTeaser =>\n              <NewsTeaser key={newsTeaser.id} newsTeaser={newsTeaser} />,\n            )}            \n          </div>\n          \n        </div>\n      </div>\n    </div>);\n}\n\nexport const getStaticProps = async (ctx) => {\n  initOnContext(ctx)\n\n  const result = await ctx.apolloClient.query({\n    query: NEWS_QUERY\n  });\n\n  const newsList = newsListMapper(result.data.nodeQuery.entities).map(news => ({\n    ...news,\n    publishedDate: null,\n  }));\n\n  return {\n    props: {\n      loading: result.loading,\n      newsList: result.data.nodeQuery.entities,\n    }\n  }\n}\n\nexport default NewsOverview;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAQA;AACA;;AAqBA;;;;A","sourceRoot":""}