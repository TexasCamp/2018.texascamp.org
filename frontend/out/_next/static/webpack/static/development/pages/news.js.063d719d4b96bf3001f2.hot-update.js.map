{"version":3,"file":"static/webpack/static/development/pages/news.js.063d719d4b96bf3001f2.hot-update.js","sources":["webpack:///./pages/news/index.js"],"sourcesContent":["import React from 'react';\nimport compose from 'recompose/compose';\nimport { withApollo, initOnContext } from '../../shared/lib/withApollo';\nimport HeadTitle from '../../components/HeadTitle';\nimport Header from '../../components/Header';\nimport Menu from '../../components/Menu';\nimport Footer from '../../components/Footer';\nimport NewsTeaser from '../../components/NewsTeaser';\nimport withNews, { NEWS_QUERY, newsListMapper } from '../../shared/query/withNews';\nimport styles from './styles.css';\nimport moment from 'moment';\n\nconst NewsOverviewOld = ({\n  loading,\n  newsList,\n}) =>\n  (!loading &&\n    <div>\n      <Menu />\n      <HeadTitle title=\"News\" />\n      <div className={styles.contentWrapper}>\n        <Header />\n        <div className={styles.content}>\n          <h1 className={styles.title}>News</h1>\n          <div className={styles.detail}>\n            <ul>\n              {newsList\n                .sort(\n                  (a, b) => b.publishedDate - a.publishedDate\n                )\n                .map(newsTeaser =>\n                  <NewsTeaser key={newsTeaser.id} newsTeaser={newsTeaser} />,\n                )}\n            </ul>\n          </div>\n          <Footer />\n        </div>\n      </div>\n    </div>) ||\n  <div>loading</div>;\n\nconst NewsOverview = (loading, newsList) => {\n  return (!loading &&\n    <div>\n      <Menu />\n      <HeadTitle title=\"News\" />\n      <div className={styles.contentWrapper}>\n        <Header />\n        <div className={styles.content}>\n          <h1 className={styles.title}>News</h1>\n          <div className={styles.detail}>\n            <ul>\n              \n            </ul>\n          </div>\n          <Footer />\n        </div>\n      </div>\n    </div>) ||\n  <div>loading</div>;\n}\n\n// {newsList\n//   .sort(\n//     (a, b) => b.publishedDate - a.publishedDate\n//   )\n//   .map(newsTeaser =>\n//     <NewsTeaser key={newsTeaser.id} newsTeaser={newsTeaser} />,\n//   )}\n\nexport const getStaticProps = async (ctx) => {\n  initOnContext(ctx)\n\n  const result = await ctx.apolloClient.query({\n    query: NEWS_QUERY\n  });\n\n  const newsList = newsListMapper(result.data.nodeQuery.entities).map(news => ({\n    ...news,\n    publishedDate: news.publishedDate && news.publishedDate.format('X')\n  }));\n  console.log(newsList);\n\n  return {\n    props: {\n      loading: result.loading,\n      newsList: result.data.nodeQuery.entities,\n    }\n  }\n}\n\nexport default NewsOverview;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BA;AACA;AA4BA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAqBA;;;;A","sourceRoot":""}